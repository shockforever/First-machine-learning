import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import make_blobs

from sklearn.cluster import MeanShift, estimate_bandwidth
from itertools import cycle

from sklearn.cluster import KMeans


centers = [[1, 1], [-1, -1], [1, -1]]
X, _ = make_blobs(n_samples=10, centers=centers, cluster_std=0.6,random_state=0)
# The following bandwidth can be automatically detected using
bandwidth = estimate_bandwidth(X, quantile=0.3, n_samples=50)

ms = MeanShift(bandwidth=bandwidth, bin_seeding=True)
ms.fit(X)
labels = ms.labels_
cluster_centers = ms.cluster_centers_

labels_unique = np.unique(labels)
n_clusters_ = len(labels_unique)

colors = cycle("bgrcmykbgrcmykbgrcmykbgrcmyk")
for k, col in zip(range(n_clusters_), colors):
    my_members = labels == k
    cluster_center = cluster_centers[k]
    plt.plot(X[my_members, 0], X[my_members, 1], col + ".")
    plt.plot(
        cluster_center[0],
        cluster_center[1],
        "o",
        markerfacecolor=col,
        markeredgecolor="k",
        markersize=14,
    )
plt.title("MeanShift clusters : %d" % n_clusters_)

#----------------------------------------------------------
plt.figure(figsize=(12, 12))
KM_n=3
y_pred = KMeans(n_clusters=KM_n, random_state=0).fit_predict(X)

plt.subplot(221)
plt.scatter(X[:, 0], X[:, 1], c=y_pred)
plt.title("KMeans clusters : %d" % KM_n)
plt.show()
